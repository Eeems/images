#!/usr/bin/env bash

set -e
source "${BASH_SOURCE%/*}"/lib

usage="$0 [OPTION]... IMAGESDIR
Build the Docker images under the IMAGESDIR directory.
The build takes advantage of any reusable layer from previously built images.
Options:
    -h              Show this help message."

helpflag=

while getopts hp name; do
    case $name in
        h) helpflag=1 ;;
        *) error "Invalid option. Use the -h flag for more information." ;;
    esac
done

shift $((OPTIND - 1))

if [[ -n $helpflag ]]; then
    echo "$usage"
    exit
fi

if [[ $# -eq 0 ]]; then
    error "Missing IMAGESDIR arguments. Use the -h flag for more information."
fi

if [[ $# -gt 1 ]]; then
    error "Extraneous arguments. Use the -h flag for more information."
fi

imagesdir="$1"

# Enable BuildKit for better cache behavior
# See <https://docs.docker.com/engine/reference/builder/#buildkit>
export DOCKER_BUILDKIT=1

docker-build() {
    image="$1"
    target="$(image-name "$image" "$2")"
    status "Building image '$target'"
    if [ $(docker run "$target" /usr/bin/checkupdates 2> /dev/stdout | wc -l) != 0 ];then
        docker image build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --build-arg FROM="$(image-name "$image" latest)" \
            $shouldcache \
            --tag "$target" .
        docker image push "$target"
    fi
}

pushd "$imagesdir"
\ls | while read image;do
    pushd "$image"
    pushd latest
    docker-build "$image" latest
    popd
    \ls | while read tag;do
        if [[ "$tag" != "latest" ]];then
            pushd "$tag"
            docker-build "$image" "$tag"
            popd
        fi
    done
    popd
done
popd

status "Done"
